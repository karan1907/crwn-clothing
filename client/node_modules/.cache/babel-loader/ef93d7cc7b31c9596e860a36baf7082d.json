{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase-util\";\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const CollectionRef = firestore.collection(\"collections\");\n    dispatchEvent(fetchCollectionsStart());\n    CollectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Volumes/King/react-hooks-graphql-andreai-neagoi/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","collectionsMap","type","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsStart","FETCH_COLLECTIONS_START","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","CollectionRef","collection","dispatchEvent","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,8BAHP;AAKA,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACxDC,EAAAA,IAAI,EAAEL,eAAe,CAACM,yBADkC;AAExDC,EAAAA,OAAO,EAAEH;AAF+C,CAAL,CAA9C;AAKP,OAAO,MAAMI,qBAAqB,GAAG,OAAO;AAC1CH,EAAAA,IAAI,EAAEL,eAAe,CAACS;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,YAAY,KAAK;AACtDN,EAAAA,IAAI,EAAEL,eAAe,CAACY,yBADgC;AAEtDL,EAAAA,OAAO,EAAEI;AAF6C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAC,IAAAA,aAAa,CAACT,qBAAqB,EAAtB,CAAb;AAEAO,IAAAA,aAAa,CAACG,GAAd,GACGC,IADH,CACQC,QAAQ,IAAI;AAChB,YAAMhB,cAAc,GAAGF,+BAA+B,CAACkB,QAAD,CAAtD;AACAN,MAAAA,QAAQ,CAACX,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACD,KAJH,EAKGiB,KALH,CAKSC,KAAK,IAAIR,QAAQ,CAACJ,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAL1B;AAMD,GAVD;AAWD,CAZM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase-util\";\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const CollectionRef = firestore.collection(\"collections\");\n    dispatchEvent(fetchCollectionsStart());\n\n    CollectionRef.get()\n      .then(snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n      })\n      .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}