{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport { persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./root-reducer\";\nconst sagaMiddleware = createSagaMiddleware();\nimport { fetchCollectionsStart } from \"./shop/shop.sagas\";\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); // sagaMiddleware.run(fetchCollectionsStart)\n\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Volumes/King/react-hooks-graphql-andreai-neagoi/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","createSagaMiddleware","rootReducer","sagaMiddleware","fetchCollectionsStart","middlewares","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AACA,SAASG,qBAAT,QAAsC,mBAAtC;AAEA,MAAMC,WAAW,GAAG,CAACF,cAAD,CAApB;;AAEA,IAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACD;;AAED,OAAO,MAAMW,KAAK,GAAGb,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB,C,CAEP;;AAEA,OAAO,MAAMM,SAAS,GAAGX,YAAY,CAACU,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport { persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from \"./root-reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\nimport { fetchCollectionsStart } from \"./shop/shop.sagas\";\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\n// sagaMiddleware.run(fetchCollectionsStart)\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}